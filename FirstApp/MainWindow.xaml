<Window
    x:Class="FirstApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FirstApp"
        xmlns:collections="clr-namespace:System.Collections;assembly=mscorlib"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        mc:Ignorable="d"
        Title="MainWindow" Height="350" Width="525">

    <Window.Resources>
        <Style x:Key="StyleFromButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="25" BorderBrush="CadetBlue" BorderThickness="2"
                                Background="LightBlue" Height="20" Width="40" >
                            <ContentControl Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center" Content="Hello" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PerfectStyleButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Button>
                            <Grid>
                                <StackPanel>
                                    <Button x:Name="FirstButton" Content="aa"></Button>
                                    <Button x:Name="SecondButton" Content="bb"></Button>
                                </StackPanel>
                            </Grid>
                        </Button>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="FirstButton" Property="Background" Value="Red"></Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="SecondButton" Property="Background" Value="Magenta"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PerfectConbobox" TargetType="{x:Type Button}">
            <Setter Property="BorderBrush" Value="Aqua"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Button>
                            <Grid>
                                <Border Background="Red" Margin="41,0,42,41" >
                                    <ContentControl Margin="16">
                                        <StackPanel>
                                            <Button Content="2323"></Button>
                                        </StackPanel>
                                    </ContentControl>
                                </Border>
                            </Grid>
                        </Button>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="PerfectTree" TargetType="{x:Type ComboBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <ComboBox Height="30" Width="100">
                            <ListView ItemsSource="{Binding PhonesProperty}" Width="83">
                                <TextBox Text="{Binding Path=PhoneName}" Width="60"></TextBox>
                                <TextBox Text="{Binding Path =Price}" Width="60"></TextBox>
                            </ListView>
                        </ComboBox>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <ControlTemplate x:Key="ExclusionsComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <AdornerDecorator>
                <Grid>
                    <ToggleButton BorderBrush="#00000000" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" Background="#00000000" Style="{x:Null}" />
                    <ToggleButton Grid.Column="2" Template="{DynamicResource ComboBoxToggleButton}" x:Name="ToggleButton" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>

                    <ContentPresenter HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="ContentSite" VerticalAlignment="Center" Content="{Binding Path=SelectedExclusionsCount}" IsHitTestVisible="False"/>

                    <TextBox Visibility="Hidden" Template="{DynamicResource ComboBoxTextBox}" HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="PART_EditableTextBox" Style="{x:Null}" VerticalAlignment="Center" Focusable="True" Background="Transparent" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                    <Rectangle x:Name="DisabledVisualElement" Fill="#A5FFFFFF" RadiusX="4" RadiusY="4" IsHitTestVisible="false" Visibility="Collapsed" />
                    <Rectangle x:Name="FocusVisualElement" Margin="-1" Stroke="{DynamicResource selectedStroke}" StrokeThickness="1" RadiusX="4" RadiusY="4" IsHitTestVisible="false" Opacity="0"/>
                    <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                        <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                            <Border x:Name="DropDownBorder" Background="#FFFFFFFF" BorderBrush="{DynamicResource TextBoxNorm}" BorderThickness="1" CornerRadius="1,1,3,3">
                                <ScrollViewer Margin="4,6,4,6"   SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained">
                                        <Button Content="aaa"></Button>
                                        <Button Content="bbb"></Button>
                                    </StackPanel>
                                </ScrollViewer>
                            </Border>
                        </Grid>
                    </Popup>
                </Grid>
            </AdornerDecorator>
        </ControlTemplate>


    </Window.Resources>

    <!--<Button x:Name="StylesButton" Style="{StaticResource StyleFromButton}"></Button>-->
    <!--<Button Style="{StaticResource PerfectConbobox}" Margin="39,35,153,135"/>-->
    <!--<ComboBox Style="{StaticResource PerfectTree}"></ComboBox>-->

    <StackPanel>
        <!--<ListBox ItemsSource="{Binding Phones}"
                SelectedItem="{Binding SelectedPhone}">
           <ListBox.ItemTemplate>
               <DataTemplate>
                   <StackPanel Margin="5">
                       <TextBlock FontSize="18" Text="{Binding Path=Title}" />
                       <TextBlock Text="{Binding Path=Company}" />
                       <TextBlock Text="{Binding Path=Price}" />
                   </StackPanel>
               </DataTemplate>
           </ListBox.ItemTemplate>
       </ListBox>
           <Button Content="2x">
               <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                       <i:InvokeCommandAction
                           Command="{Binding DoubleCommand}"
                           CommandParameter="{Binding SelectedPhone}" />
                   </i:EventTrigger>
               </i:Interaction.Triggers>
           </Button>
       <TextBox Text="{Binding SelectedPhone.PhoneName, UpdateSourceTrigger=PropertyChanged}" />-->

        <ComboBox ItemsSource="{Binding Path=Nodes}" 
                  SelectedItem="{Binding SelectNodeCombobox}"></ComboBox>
        <ListView ItemsSource="{Binding Directories}" SelectedItem="{Binding SelectNodeListView}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction
                        Command="{Binding SelectedCommand}"
                        CommandParameter="{Binding SelectNodeListView}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </ListView>
    </StackPanel>





</Window>

    
